server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true     #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh  #paymentg_route  #路由器的id。没有固定的要求但唯一，建议配合服务名
          #uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://CLOUD-PAYMENT-SERVICE      #匹配后提供路由服务的地址
          predicates:
            - Path=/payment/get/**            #断言，路径相匹配的进行路由
            - After=2020-03-25T15:37:28.375+08:00[Asia/Shanghai] #断言。在after写的事件之后访问才会有效果
            - Cookie=username,wddlhyss

        - id: payment_routh2                  #路由器的id。没有固定的要求但唯一，建议配合服务名
          #uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://CLOUD-PAYMENT-SERVICE      #匹配后提供路由服务的地址
          predicates:
              - Path=/payment/lb/**           #断言，路径相匹配的进行路由
              #- After=2020-03-25T15:37:28.375+08:00[Asia/Shanghai] #断言。在after写的事件之后访问才会有效果
             # - Cookie=username,wddlhyss          #断言。是否带cookie访问（一个属性名，一个正则表达式）
              #- Header=X-Request-Id,\d+            #请求头要求有X-Request-Id属性并且值为正数的正则表达式
              - Method=GET                         #请求方式
              #- Query=username,\d+                 #断言，带查询条件，要有参数名username并且值还要为整数才能路由

eureka:
  client:
    #表示是否将自己注册进eurekaServer，默认为true
    register-with-eureka: true
    #是否从eureka中抓取已有的注册信息，默认为true 单节点无所谓集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka
      #defaultZone: http://eureka7002.com:7002/eureka,http://eureka7001.com:7001/eureka
  instance:
    hostname: cloud-gateway
